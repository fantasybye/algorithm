import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int count = s.nextInt();
        while(count-->0){
            int n = s.nextInt();
            int m = s.nextInt();
            int[] road1 = new int[n];
            int[] road2 = new int[m];
            for(int i = 0; i < n; i++){
                road1[i] = s.nextInt();
            }
            for(int i = 0; i < m; i++){
                road2[i] = s.nextInt();
            }
            System.out.println(findMaxPath(n,m,road1,road2));
        }
    }
    public static int findMaxPath(int n,int m,int[] road1,int[] road2) {
        int i = 0, j = 0, sum1 = 0, sum2 = 0, sum = 0;
        while (true) {
            while (i < n && j < m && road1[i] != road2[j]) {
                if (road1[i] < road2[j])
                    sum1 += road1[i++];
                else if (road1[i] > road2[j])
                    sum2 += road2[j++];
            }
            if (i < n && j < m) {
                sum1 += road1[i++];
                sum2 += road2[j++];
                sum += Math.max(sum1, sum2);
                sum1 = 0;
                sum2 = 0;
            }else if(i < n){
                sum1 += road1[i++];
            }else if(j < m){
                sum2 += road2[j++];
            }else{
                sum += Math.max(sum1, sum2);
                return sum;
            }
        }
    }
}