import java.util.Scanner;
import java.util.Stack;

public class Main {
    public static void quickSort(int[] arr){
        int left = 0,right = arr.length-1;
        Stack<Integer> stack = new Stack<>();
        stack.push(left);
        stack.push(right);
        while(!stack.isEmpty()){
            right = stack.pop();
            left = stack.pop();
            int p = findPivot(arr, left, right);
            if((p - 1)>left){
                stack.push(left);
                stack.push((p-1));
            }
            if((p + 1)<right){
                stack.push((p+1));
                stack.push(right);
            }
        }
    }

    public static int findPivot(int[] arr, int left, int right){
        int pivot = arr[left];
        int p = left;
        while (left < right){
            while (left < right){
                if(arr[right] < pivot){
                    arr[left]  = arr[right];
                    p = right;
                    break;
                }else{
                    right--;
                }
            }
            while (left < right){
                if(arr[left] > pivot){
                    arr[right] = arr[left];
                    p = left;
                    break;
                }else{
                    left++;
                }
            }
        }
        arr[p] = pivot;
        return p;
    }

    public static void displayArray(int[] arr){
        for(int i = 0; i < arr.length-1;i++){
            System.out.print(arr[i]+" ");
        }
        System.out.print(arr[arr.length-1]);
        System.out.println();
    }

    public static int[] handleInput(Scanner s){
        String str = s.nextLine();
        String[] sarr = str.split(" ");
        int[] arr = new int[sarr.length-1];
        for(int i = 0;i < arr.length; i++){
            arr[i] = Integer.parseInt(sarr[i+1]);
        }
        return arr;
    }
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        while (s.hasNextLine()){
            int[] arr = handleInput(s);
            quickSort(arr);
            displayArray(arr);
        }
    }
}
